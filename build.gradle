plugins {
    id 'java-library'
    id 'maven-publish'
    id 'idea'
    id 'net.neoforged.moddev' version '2.0.80'
    // shadow 插件
    id 'com.gradleup.shadow' version '8.3.6'
}

version = mod_version
group = mod_group_id

repositories {
    mavenLocal()
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neo_version
    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }

    runs {
        client {
            client()

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        server {
            server()
            programArgument '--nogui'
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        data {
            data()

            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }

        configureEach {

            systemProperty 'forge.logging.markers', 'REGISTRIES'

            logLevel = org.slf4j.event.Level.DEBUG
        }
    }

    mods {

        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    jarJar
    runtimeClasspath.extendsFrom localRuntime

    // 自定义一个 minecraftLibrary，方便引入需要 Shadow 的库
    mcLib
    implementation {
        extendsFrom mcLib
    }
    additionalRuntimeClasspath {
        extendsFrom mcLib
    }
}

dependencies {
    //mcLib("com.fasterxml.jackson.core:jackson-databind:2.18.3")
    mcLib("com.fasterxml.jackson.jr:jackson-jr-objects:2.18.3")
    //mcLib "com.googlecode.soundlibs:vorbisspi:1.0.3.3"
    //mcLib "com.googlecode.soundlibs:jorbis:0.0.17.4"
    mcLib "org.gagravarr:vorbis-java-core:0.8"
    mcLib "io.github.jaredmdobson:concentus:1.0.2"
    mcLib "com.googlecode.soundlibs:tritonus-share:0.3.7.4"
    mcLib "com.googlecode.soundlibs:jlayer:1.0.1.4"
    //mcLib "com.googlecode.soundlibs:mp3spi:1.9.5.4"

    testImplementation 'junit:junit:4.13.2'

}
var generateModMetadata = tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [minecraft_version      : minecraft_version,
                             minecraft_version_range: minecraft_version_range,
                             neo_version            : neo_version,
                             neo_version_range      : neo_version_range,
                             loader_version_range   : loader_version_range,
                             mod_id                 : mod_id,
                             mod_name               : mod_name,
                             mod_license            : mod_license,
                             mod_version            : mod_version,
                             mod_authors            : mod_authors,
                             mod_description        : mod_description]
    inputs.properties replaceProperties
    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}

sourceSets.main.resources.srcDir generateModMetadata
neoForge.ideSyncTask generateModMetadata

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}
shadowJar {
    configurations = [project.configurations.mcLib, project.configurations.jarJar]

    // MP3 音频库 居然会把 junit 打包进去……
    dependencies {
        exclude(dependency('junit:junit'))
    }

    // 包重定向
    // relocate 'javazoom.jl', 'com.github.tartaricacid.touhoulittlemaid.libs.jl'
    // relocate 'javazoom.spi', 'com.github.tartaricacid.touhoulittlemaid.libs.spi'
    // relocate 'org.tritonus', 'com.github.tartaricacid.touhoulittlemaid.libs.tritonus'
    //relocate 'io.github.jaredmdobson.concentus', 'com.github.tartaricacid.touhoulittlemaid.libs.concentus'
    //relocate 'org.gagravarr', 'com.github.tartaricacid.touhoulittlemaid.libs.gagravarr'
    //relocate 'com.googlecode.soundlibs', 'com.huashanlunjian.amara.libs.soundlibs'

    // 排除不需要的依赖项和资源
    exclude 'META-INF/maven/**/*'
    exclude 'META-INF/versions/**/*'
    // 这个版权许可都已经手动添加进 licenses 里了
    exclude 'META-INF/LICENSE'

    mergeServiceFiles()
    minimize()
}
assemble {
    dependsOn shadowJar
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
